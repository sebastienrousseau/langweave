var searchIndex = new Map(JSON.parse('[["langweave",{"t":"SCHCHCCCHHCCHGPPPPNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNFKNNNNMNMNNNNNNNNEEEEEEHFNNNNNNNNNNNNNNNNN","n":["VERSION","async_utils","detect_language","error","is_language_supported","language_detector","language_detector_trait","prelude","supported_languages","translate","translations","translator","translate_async","I18nError","LanguageDetectionFailed","TranslationFailed","UnexpectedError","UnsupportedLanguage","as_str","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","equivalent","","fmt","","from","into","to_owned","to_string","try_from","try_into","type_id","LanguageDetector","borrow","borrow_mut","clone","clone_into","clone_to_uninit","convert_lang_code","default","detect","detect_async","fmt","from","into","new","to_owned","try_from","try_into","type_id","CompositeLanguageDetector","LanguageDetectorTrait","add_detector","borrow","borrow_mut","default","detect","","detect_async","","fmt","from","into","new","try_from","try_into","type_id","I18nError","Translator","detect_language","is_language_supported","supported_languages","translate","","Translator","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","","from","into","lang","new","to_owned","to_string","translate","try_from","try_into","type_id"],"q":[[0,"langweave"],[12,"langweave::async_utils"],[13,"langweave::error"],[36,"langweave::language_detector"],[54,"langweave::language_detector_trait"],[71,"langweave::prelude"],[77,"langweave::translations"],[78,"langweave::translator"],[96,"alloc::string"],[97,"core::result"],[98,"alloc::vec"],[99,"core::fmt"],[100,"core::any"],[101,"whatlang::lang"],[102,"core::future::future"],[103,"alloc::boxed"],[104,"core::pin"]],"i":"``````````````h000000000000000000000`Al0000000000000000``Bf000Bh1011111111````````Bj0000000000000000","f":"``{{{d{b}}}{{j{fh}}}}`{{{d{b}}}l}```{{}{{n{f}}}}{{{d{b}}{d{b}}}{{j{fh}}}}``0`````{{{d{h}}}{{d{b}}}}{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{{{d{h}}}h}{{d{d{A`c}}}Ab{}}{{dAd}Ab}{{{d{h}}{d{h}}}l}{{d{d{c}}}l{}}0{{{d{h}}{d{A`Af}}}Ah}0{cc{}}{{}c{}}{dc{}}{df}{c{{j{e}}}{}{}}{{}{{j{c}}}{}}{dAj}`>={{{d{Al}}}Al}<;{{{d{Al}}An}f}{{}Al}{{{d{Al}}{d{b}}}{{j{fh}}}}{{{d{Al}}{d{b}}}{{Bd{{Bb{B`}}}}}}{{{d{Al}}{d{A`Af}}}Ah}<;3:876``{{{d{A`Bf}}{Bb{Bh}}}Ab}{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{{}Bf}{{{d{Bh}}{d{b}}}{{j{fh}}}}{{{d{Bf}}{d{b}}}{{j{fh}}}}{{{d{Bh}}{d{b}}}{{Bd{{Bb{B`}}}}}}1{{{d{Bf}}{d{A`Af}}}Ah}{cc{}}{{}c{}}6{c{{j{e}}}{}{}}{{}{{j{c}}}{}}{dAj}``````{{{d{b}}{d{b}}}{{j{fh}}}}`<;{{{d{Bj}}}Bj}{{d{d{A`c}}}Ab{}}{{dAd}Ab}{{{d{Bj}}{d{A`Af}}}Ah}098{{{d{Bj}}}{{d{b}}}}{{{d{b}}}{{j{Bjh}}}}{dc{}}{df}{{{d{Bj}}{d{b}}}{{j{fh}}}}<;:","D":"El","p":[[1,"str"],[1,"reference",null,null,1],[5,"String",96],[6,"I18nError",13],[6,"Result",97,null,1],[1,"bool"],[5,"Vec",98],[0,"mut"],[1,"unit"],[1,"u8"],[5,"Formatter",99],[8,"Result",99],[5,"TypeId",100],[5,"LanguageDetector",36],[6,"Lang",101],[10,"Future",102,null,1],[5,"Box",103,null,1],[5,"Pin",104],[5,"CompositeLanguageDetector",54],[10,"LanguageDetectorTrait",54],[5,"Translator",78]],"r":[[71,13],[72,78],[73,0],[74,0],[75,0],[76,0]],"b":[[27,"impl-Display-for-I18nError"],[28,"impl-Debug-for-I18nError"],[84,"impl-Debug-for-Translator"],[85,"impl-Display-for-Translator"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADIADAAAAAAAFAAJACAABAAmAAQALwAAADMAAwA6AAIAQQAAAEUACABQAAYAWwABAF4AAgA=","P":[[19,"T"],[21,""],[22,"T"],[23,""],[25,"K"],[27,""],[29,"T"],[30,"U"],[31,"T"],[32,""],[33,"U,T"],[34,"U"],[35,""],[37,"T"],[39,""],[40,"T"],[41,""],[47,"T"],[48,"U"],[49,""],[50,"T"],[51,"U,T"],[52,"U"],[53,""],[57,"T"],[59,""],[65,"T"],[66,"U"],[67,""],[68,"U,T"],[69,"U"],[70,""],[79,"T"],[81,""],[82,"T"],[83,""],[86,"T"],[87,"U"],[88,""],[90,"T"],[91,""],[93,"U,T"],[94,"U"],[95,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3713]}